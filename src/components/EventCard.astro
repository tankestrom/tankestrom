---
//@ts-nocheck
import Button from "./Button.astro";
const { buttonLabel, buttonHref } = Astro.props;

const url = "https://uvbakkgmltctqpkgfvdb.supabase.co/rest/v1/events";
const key =
  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InV2YmFra2dtbHRjdHFwa2dmdmRiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc2NTgzMzMsImV4cCI6MjA2MzIzNDMzM30.OLsvC4Pl5HOP4Iwbeh4eHs68Iv0glsYj7Ff1xP4GFWg";
const options = {
  headers: {
    apikey: key,
  },
};

const data = await fetch(url, options).then((res) => {
  return res.json();
});

// Sortér efter første dato i multi_dates hvis den findes, ellers event_date
data.sort((a, b) => {
  const dateA = a.multi_dates?.[0] || a.event_date;
  const dateB = b.multi_dates?.[0] || b.event_date;
  return new Date(dateA) - new Date(dateB);
});

console.log("DATA FRA SUPABASE", data);
---

{
  data.map((event) => {
    // Brug første dato til fallback-formattering
    const fallbackDate = new Date(event.event_date);
    const dayFormatted = String(fallbackDate.getDate()).padStart(2, "0");
    const monthFormatted = fallbackDate
      .toLocaleDateString("da-DK", {
        month: "short",
      })
      .replace(".", "")
      .toUpperCase();

    return (
      <div class="event-wrapper">
        <p class="event-type-tag">{event.event_type}</p>
        <article class="event-card">
          {/* === DATOSEKTION === */}
          {event.multi_dates && event.multi_dates.length > 0 ? (
            <div class="multi-date-block">
              {event.multi_dates.map((d) => {
                const date = new Date(d);
                const day = String(date.getDate()).padStart(2, "0");
                const month = date
                  .toLocaleString("da-DK", {
                    month: "short",
                  })
                  .replace(".", "")
                  .toUpperCase();
                return (
                  <div class="single-date">
                    <p class="date-day no-smaller">{day}</p>
                    <h3 class="date-month">{month}</h3>
                  </div>
                );
              })}
            </div>
          ) : (
            <div class="event-date-container">
              <p class="date-day no-smaller">{dayFormatted}</p>
              <h3 class="date-month">{monthFormatted}</h3>
            </div>
          )}

          {/* === INDHOLD === */}
          <div class="event-container">
            <h4>{event.event_title}</h4>
            <div class="event-info">
              <div class="text-info">
                <p class="event-type">{event.event_type}</p>
                <p class="organizer">{event.event_organizer}</p>
                <div class="event-description">
                  <p
                    class="p-smaller"
                    set:html={event.event_description.replace(/\n/g, "<br>")}
                  />
                </div>
              </div>
              <div class="box-info">
                <div class="location-container">
                  <a
                    class="event-location p-smaller"
                    set:html={event.event_location.replace(/\n/g, "<br>")}
                  />
                  <img src="/public/svg/location.svg" alt="Lokationsikon" />
                </div>
                <div class="time-container">
                  {event.event_start && event.event_end && (
                    <p class="event-time p-smaller">
                      Kl {event.event_start.slice(0, 5).replace(":", ".")} til{" "}
                      {event.event_end.slice(0, 5).replace(":", ".")}
                      {/* viser kun de første 5 tegn = time + minut. og replacer : med . (mere dansk) */}
                    </p>
                  )}
                  <img src="/public/svg/time.svg" alt="" />
                </div>
                <div class="btn">
                  <Button href={buttonHref} label={buttonLabel} />
                </div>
              </div>
            </div>
          </div>
        </article>
      </div>
    );
  })
}

<style>
  .event-card {
    background-color: var(--box-grey);
    padding: 15px 15px;
    border-radius: 20px;
    display: flex;
    flex-direction: column;
    gap: 15px;
    background:
      linear-gradient(var(--box-grey), var(--box-grey)) padding-box,
      var(--logo-grad) border-box; /* 2 lag, padding-box indeni, border-box inkl border */
    border: 1px solid transparent;
    margin-bottom: 80px;
  }
  .multi-date-block {
    display: flex;
    flex-direction: row;
    gap: 10px;
    justify-content: space-between;
    background:
      linear-gradient(var(--box-grey), var(--box-grey)) padding-box,
      var(--logo-grad) border-box; /* 2 lag, padding-box indeni, border-box inkl border */
    border-bottom: 1px solid transparent;
    padding-bottom: 20px;
  }
  .multi-date-block .date-day {
    font-size: 15vw;
    text-align: center;
  }
  .multi-date-block .date-month {
    font-size: 10vw;
    text-align: center;
  }
  .event-date-container {
    background:
      linear-gradient(var(--box-grey), var(--box-grey)) padding-box,
      var(--logo-grad) border-box; /* 2 lag, padding-box indeni, border-box inkl border */
    border-bottom: 1px solid transparent;
    padding-bottom: 20px;
    display: flex;
    flex-direction: column;
  }
  .date-month,
  .date-day {
    line-height: 0.9;
  }
  .date-month {
    font-size: 50px;
  }
  h4 {
    margin-bottom: 15px;
  }
  .event-type {
    text-transform: uppercase;
    /* bold??? */
  }
  .organizer {
    font-style: italic;
    /* lighter??? */
  }
  .event-description p {
    margin-top: 15px;
  }
  .box-info {
    min-width: 300px;
    background:
      linear-gradient(var(--box-grey), var(--box-grey)) padding-box,
      var(--logo-grad) border-box; /* 2 lag, padding-box indeni, border-box inkl border */
    border: 1px solid transparent;
    border-radius: 15px;
    padding: 10px 10px 20px;
    margin-top: 20px;
    color: var(--white);
  }
  .location-container,
  .time-container {
    display: flex;
    gap: 10px;
    justify-content: space-between;
    border-bottom: 1px solid var(--white);
    padding: 20px 0 20px;
    align-items: center;
  }
  .time-container {
    margin-bottom: 20px;
  }
  .location-container img,
  .time-container img {
    width: 50px;
    height: auto;
    filter: brightness(0) saturate(100%) invert(100%);
  }
  .time-container img {
    width: 30px;
    margin-right: 10px;
  }

  .event-wrapper {
    position: relative;
  }

  .event-type-tag {
    position: absolute;
    top: -43px;
    left: 6%;
    background: var(--logo-grad);
    color: var(--white);
    padding: 15px 35px 7px;
    border-radius: 20px 20px 0 0;
    text-transform: uppercase;
    z-index: 10;
  }
  @media screen and (min-width: 850px) {
    .event-card {
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
      max-width: 1100px;
      margin: 0 auto 80px;
    }
    .event-date-container {
      border-bottom: none;
      padding-bottom: 0;
      align-items: center;
      padding: 0 20px;
    }
    .multi-date-block {
      border-bottom: none;
      flex-direction: column;
      align-items: center;
      gap: 20px;
      padding: 0 20px;
    }
    .no-smaller {
      font-size: 80px !important;
    }
    .multi-date-block h3 {
      font-size: 50px !important;
    }
    h4 {
      margin-bottom: 30px;
    }
    .event-container {
      background:
        linear-gradient(var(--box-grey), var(--box-grey)) padding-box,
        var(--logo-grad) border-box; /* 2 lag, padding-box indeni, border-box inkl border */
      border-left: 1px solid transparent;
      padding-left: 20px;
    }
    .event-info {
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      gap: 20px;
      width: 100%;
    }
    .box-info {
      margin-top: 0;
    }
    .event-type-tag {
      left: 15%;
      top: -46px;
    }
  }
</style>
